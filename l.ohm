l {
	Program =
		Expression end	-- expression
		| Statement* end	-- statement
	Expression = ExpressionCall
	ExpressionCall =
		ExpressionAtom ExpressionCall	-- call
		| ExpressionAtom
	ExpressionAtom =
		"(" Expression ")"	-- parentheses
		| "%" identifier "%"	-- placeholder
		| ExpressionName
		| number
		| string
	ExpressionName = identifier
	identifier = &(letter|"_") (alnum|"_")+
	number = digit+
	string = "\"" char* "\""
	char = ~("\""|"\\") any	-- literal
		| "\\" ("\"" | "\\" | "b" | "f" | "n" | "r" | "t" | "v")	-- escaped
	Statement = StatementAssign
		| "%" identifier "%"	-- placeholder
	StatementAssign = ExpressionName "=" Expression ";"
}